apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: flogo-api-skeleton-generator-template
  title: Flogo API Skeleton Generator
  description: Create a new Flogo project that implements an API Skeleton
  tags:
    - tibco
    - flogo
    - recommended
spec:
  owner: ACME
  type: integration
  parameters:
    - title: Flogo API Skeleton Generator
      description: 'Please select the characteristics if the Flogo application:'
      type: object
      required:
        - application
      properties:
        application:
          type: string
          title: Name of the Flogo application
          default: ''
        description:
          title: Description
          type: string
          description: A description for the Flogo Project
        api:
          title: API Selector
          type: string
          description: API To generate the Flogo Project for
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - API
    - title: Choose an owner
      required:
        - owner
      properties:
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
  #        repoUrl:
  #          title: Repository Location
  #          type: string
  #          ui:field: RepoUrlPicker
  #          ui:options:
  #            allowedHosts:
  #              - github.com

  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
    - id: fetch
      name: BWCE Skeleton
      action: fetch:template
      input:
        url: ./skeleton-flogo-api-generator
        targetPath: ./flogo-output/${{ parameters.application }}/
        values:
          name: ${{ parameters.application }}
          description: ${{ parameters.description }}
          #destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          # system: ${{ parameters.system }}
          # api: ${{ parameters.api | replace("api:default/", "") }}
          api: 'NewLoan9'


    #    - id: publish
    #      name: Publish
    #      action: publish:github
    #      input:
    #        allowedHosts: ["github.com"]
    #        description: This is ${{ parameters.name }}
    #        repoUrl: ${{ parameters.repoUrl }}
    - id: cpr
      name: Create Pull Request in Current Repo
      action: publish:github:pull-request
      input:
        # repoUrl: ${{ parameters.repoHost }}?owner=${{ parameters.repoOwner }}&repo=${{ parameters.repoSlug }}
        repoUrl: github.com?owner=davewins&repo=apis
        branchName: ${{ parameters.application }}
        title: ${{ parameters.application }}
        description: This PR adds a new Flogo API Skeleton Application to this Repository.

    - id: register
      name: Register
      action: catalog:register
      input:
        # repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        # catalogInfoPath: "/catalog-info.yaml"
        catalogInfoUrl: ${{ "https://github.com/davewins/apis/blob/" + parameters.application + "/flogo-output/" + parameters.application + "/catalog-info.yaml" }}

    - id: Log Debug
      name: Debug Log
      action: debug:log
      input:
        message: "Fetched the Flogo Skeleton template"
        listWorkspace: true
        api: ${{ parameters.api }}

    - id: triggerJenkinsJob
      name: Trigger Jenkins Template Creation
      action: tibco:trigger-jenkins-job
      input:
        name: ${{ parameters.application }}
        # repoUrl: ${{ parameters.repoUrl | parseRepoUrl}}
        job: Generate_Flogo_API_Skeleton_Project
        jenkinsInstructions: ${{"&app_name=" + parameters.application + "&api_name=" + parameters.api }}



  #
  #    - id: Log Debug
  #      name: Debug Log
  #      action: debug:log
  #      input:
  #        message: "Fetched the BWCE Skeleton template"
  #        listWorkspace: true
  #        projectName: ${{ parameters.application }}
  #        flows: ${{ parameters.flow }}

  output:
    links:
      - title: European Bank for Reconstruction and Development (EBRD)
        url: 'https://www.ebrd.com/home'
      - title: Repository (Pull Request)
        url: ${{ steps.cpr.output.remoteUrl }}
      #      - title: Repository
      #        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      - title: Open Jenkins Job
        icon: dashboard
        url: ${{ steps.triggerJenkinsJob.output.jobLink }}
      - title: Open in VSCode
        icon: dashboard
        url: 'vscode://vscode.git/clone?url=https://github.com/davewins/apis/'

#      - title: Open in catalog
#        icon: catalog
#        entityRef: ${{ steps.register.output.entityRef }}

#    links:
#      - title: Repository
#        url: ${{ steps.publish.output.remoteUrl }}
#      - title: Open in catalog
#        icon: catalog
#        entityRef: ${{ steps.register.output.entityRef }}
